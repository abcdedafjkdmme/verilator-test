; SMT-LIBv2 description generated by Yosys 0.40+25 (git sha1 171577f90, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os)
; yosys-smt2-module uart_tx
(declare-sort |uart_tx_s| 0)
(declare-fun |uart_tx_is| (|uart_tx_s|) Bool)
; yosys-smt2-witness {"offset": 0, "path": ["\\r_state"], "smtname": 0, "smtoffset": 0, "type": "reg", "width": 32}
(declare-fun |uart_tx#0| (|uart_tx_s|) (_ BitVec 32)) ; \r_state
; yosys-smt2-register r_state 32
; yosys-smt2-wire r_state 32
(define-fun |uart_tx_n r_state| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#0| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\r_data"], "smtname": 1, "smtoffset": 0, "type": "reg", "width": 8}
(declare-fun |uart_tx#1| (|uart_tx_s|) (_ BitVec 8)) ; \r_data
; yosys-smt2-register r_data 8
; yosys-smt2-wire r_data 8
(define-fun |uart_tx_n r_data| ((state |uart_tx_s|)) (_ BitVec 8) (|uart_tx#1| state))
; yosys-smt2-anyinit uart_tx#2 1 uart_tx.v:26.3-41.6
; yosys-smt2-witness {"offset": 0, "path": ["\\o_uart_tx"], "smtname": 2, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |uart_tx#2| (|uart_tx_s|) (_ BitVec 1)) ; \o_uart_tx
; yosys-smt2-output o_uart_tx 1
; yosys-smt2-register o_uart_tx 1
; yosys-smt2-wire o_uart_tx 1
(define-fun |uart_tx_n o_uart_tx| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#2| state)) #b1))
(define-fun |uart_tx#3| ((state |uart_tx_s|)) Bool (not (or  (= ((_ extract 0 0) (|uart_tx#0| state)) #b1) (= ((_ extract 1 1) (|uart_tx#0| state)) #b1) (= ((_ extract 2 2) (|uart_tx#0| state)) #b1) (= ((_ extract 3 3) (|uart_tx#0| state)) #b1) (= ((_ extract 4 4) (|uart_tx#0| state)) #b1) (= ((_ extract 5 5) (|uart_tx#0| state)) #b1) (= ((_ extract 6 6) (|uart_tx#0| state)) #b1) (= ((_ extract 7 7) (|uart_tx#0| state)) #b1) (= ((_ extract 8 8) (|uart_tx#0| state)) #b1) (= ((_ extract 9 9) (|uart_tx#0| state)) #b1) (= ((_ extract 10 10) (|uart_tx#0| state)) #b1) (= ((_ extract 11 11) (|uart_tx#0| state)) #b1) (= ((_ extract 12 12) (|uart_tx#0| state)) #b1) (= ((_ extract 13 13) (|uart_tx#0| state)) #b1) (= ((_ extract 14 14) (|uart_tx#0| state)) #b1) (= ((_ extract 15 15) (|uart_tx#0| state)) #b1) (= ((_ extract 16 16) (|uart_tx#0| state)) #b1) (= ((_ extract 17 17) (|uart_tx#0| state)) #b1) (= ((_ extract 18 18) (|uart_tx#0| state)) #b1) (= ((_ extract 19 19) (|uart_tx#0| state)) #b1) (= ((_ extract 20 20) (|uart_tx#0| state)) #b1) (= ((_ extract 21 21) (|uart_tx#0| state)) #b1) (= ((_ extract 22 22) (|uart_tx#0| state)) #b1) (= ((_ extract 23 23) (|uart_tx#0| state)) #b1) (= ((_ extract 24 24) (|uart_tx#0| state)) #b1) (= ((_ extract 25 25) (|uart_tx#0| state)) #b1) (= ((_ extract 26 26) (|uart_tx#0| state)) #b1) (= ((_ extract 27 27) (|uart_tx#0| state)) #b1) (= ((_ extract 28 28) (|uart_tx#0| state)) #b1) (= ((_ extract 29 29) (|uart_tx#0| state)) #b1) (= ((_ extract 30 30) (|uart_tx#0| state)) #b1) (= ((_ extract 31 31) (|uart_tx#0| state)) #b1)))) ; $eq$uart_tx.v:32$21_Y
(define-fun |uart_tx#4| ((state |uart_tx_s|)) Bool (not (or  (|uart_tx#3| state) false))) ; \o_busy
; yosys-smt2-output o_busy 1
; yosys-smt2-wire o_busy 1
(define-fun |uart_tx_n o_busy| ((state |uart_tx_s|)) Bool (|uart_tx#4| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\is_past_valid"], "smtname": 5, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#5| (|uart_tx_s|) (_ BitVec 1)) ; \is_past_valid
; yosys-smt2-register is_past_valid 1
; yosys-smt2-wire is_past_valid 1
(define-fun |uart_tx_n is_past_valid| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#5| state)) #b1))
(declare-fun |uart_tx#6| (|uart_tx_s|) Bool) ; \i_wr
; yosys-smt2-input i_wr 1
; yosys-smt2-wire i_wr 1
; yosys-smt2-witness {"offset": 0, "path": ["\\i_wr"], "smtname": "i_wr", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_tx_n i_wr| ((state |uart_tx_s|)) Bool (|uart_tx#6| state))
(declare-fun |uart_tx#7| (|uart_tx_s|) (_ BitVec 8)) ; \i_data
; yosys-smt2-input i_data 8
; yosys-smt2-wire i_data 8
; yosys-smt2-witness {"offset": 0, "path": ["\\i_data"], "smtname": "i_data", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |uart_tx_n i_data| ((state |uart_tx_s|)) (_ BitVec 8) (|uart_tx#7| state))
(declare-fun |uart_tx#8| (|uart_tx_s|) Bool) ; \i_clk
; yosys-smt2-input i_clk 1
; yosys-smt2-wire i_clk 1
; yosys-smt2-clock i_clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\i_clk"], "smtname": "i_clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\i_clk"], "smtname": "i_clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |uart_tx_n i_clk| ((state |uart_tx_s|)) Bool (|uart_tx#8| state))
; yosys-smt2-anyinit uart_tx#9 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_139"], "smtname": 9, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#9| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_139
; yosys-smt2-register _witness_.anyinit_procdff_139 32
; yosys-smt2-wire _witness_.anyinit_procdff_139 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_139| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#9| state))
; yosys-smt2-anyinit uart_tx#10 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_138"], "smtname": 10, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#10| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_138
; yosys-smt2-register _witness_.anyinit_procdff_138 32
; yosys-smt2-wire _witness_.anyinit_procdff_138 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_138| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#10| state))
; yosys-smt2-anyinit uart_tx#11 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_137"], "smtname": 11, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#11| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_137
; yosys-smt2-register _witness_.anyinit_procdff_137 32
; yosys-smt2-wire _witness_.anyinit_procdff_137 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_137| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#11| state))
; yosys-smt2-anyinit uart_tx#12 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_136"], "smtname": 12, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#12| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_136
; yosys-smt2-register _witness_.anyinit_procdff_136 32
; yosys-smt2-wire _witness_.anyinit_procdff_136 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_136| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#12| state))
; yosys-smt2-anyinit uart_tx#13 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_135"], "smtname": 13, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#13| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_135
; yosys-smt2-register _witness_.anyinit_procdff_135 32
; yosys-smt2-wire _witness_.anyinit_procdff_135 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_135| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#13| state))
; yosys-smt2-anyinit uart_tx#14 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_134"], "smtname": 14, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#14| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_134
; yosys-smt2-register _witness_.anyinit_procdff_134 32
; yosys-smt2-wire _witness_.anyinit_procdff_134 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_134| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#14| state))
; yosys-smt2-anyinit uart_tx#15 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_133"], "smtname": 15, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#15| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_133
; yosys-smt2-register _witness_.anyinit_procdff_133 32
; yosys-smt2-wire _witness_.anyinit_procdff_133 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_133| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#15| state))
; yosys-smt2-anyinit uart_tx#16 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_132"], "smtname": 16, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#16| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_132
; yosys-smt2-register _witness_.anyinit_procdff_132 32
; yosys-smt2-wire _witness_.anyinit_procdff_132 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_132| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#16| state))
; yosys-smt2-anyinit uart_tx#17 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_131"], "smtname": 17, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#17| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_131
; yosys-smt2-register _witness_.anyinit_procdff_131 32
; yosys-smt2-wire _witness_.anyinit_procdff_131 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_131| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#17| state))
; yosys-smt2-anyinit uart_tx#18 1 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_130"], "smtname": 18, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |uart_tx#18| (|uart_tx_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_130
; yosys-smt2-register _witness_.anyinit_procdff_130 1
; yosys-smt2-wire _witness_.anyinit_procdff_130 1
(define-fun |uart_tx_n _witness_.anyinit_procdff_130| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#18| state)) #b1))
; yosys-smt2-anyinit uart_tx#19 32 uart_tx.v:55.3-63.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_129"], "smtname": 19, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |uart_tx#19| (|uart_tx_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_129
; yosys-smt2-register _witness_.anyinit_procdff_129 32
; yosys-smt2-wire _witness_.anyinit_procdff_129 32
(define-fun |uart_tx_n _witness_.anyinit_procdff_129| ((state |uart_tx_s|)) (_ BitVec 32) (|uart_tx#19| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$190"], "smtname": 20, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#20| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$190
; yosys-smt2-register $auto$async2sync.cc:110:execute$190 1
(define-fun |uart_tx_n $auto$async2sync.cc:110:execute$190| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#20| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$184"], "smtname": 21, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#21| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$184
; yosys-smt2-register $auto$async2sync.cc:110:execute$184 1
(define-fun |uart_tx_n $auto$async2sync.cc:110:execute$184| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#21| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$178"], "smtname": 22, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#22| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$178
; yosys-smt2-register $auto$async2sync.cc:110:execute$178 1
(define-fun |uart_tx_n $auto$async2sync.cc:110:execute$178| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#22| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$166"], "smtname": 23, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#23| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$166
; yosys-smt2-register $auto$async2sync.cc:110:execute$166 1
(define-fun |uart_tx_n $auto$async2sync.cc:110:execute$166| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#23| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$154"], "smtname": 24, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#24| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$154
; yosys-smt2-register $auto$async2sync.cc:110:execute$154 1
(define-fun |uart_tx_n $auto$async2sync.cc:110:execute$154| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#24| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$148"], "smtname": 25, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#25| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$148
; yosys-smt2-register $auto$async2sync.cc:110:execute$148 1
(define-fun |uart_tx_n $auto$async2sync.cc:110:execute$148| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#25| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$186"], "smtname": 26, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#26| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$186
; yosys-smt2-register $auto$async2sync.cc:101:execute$186 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$186| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#26| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$180"], "smtname": 27, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#27| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$180
; yosys-smt2-register $auto$async2sync.cc:101:execute$180 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$180| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#27| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$174"], "smtname": 28, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#28| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$174
; yosys-smt2-register $auto$async2sync.cc:101:execute$174 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$174| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#28| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$168"], "smtname": 29, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#29| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$168
; yosys-smt2-register $auto$async2sync.cc:101:execute$168 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$168| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#29| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$162"], "smtname": 30, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#30| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$162
; yosys-smt2-register $auto$async2sync.cc:101:execute$162 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$162| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#30| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$156"], "smtname": 31, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#31| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$156
; yosys-smt2-register $auto$async2sync.cc:101:execute$156 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$156| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#31| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$150"], "smtname": 32, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#32| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$150
; yosys-smt2-register $auto$async2sync.cc:101:execute$150 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$150| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#32| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$144"], "smtname": 33, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |uart_tx#33| (|uart_tx_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$144
; yosys-smt2-register $auto$async2sync.cc:101:execute$144 1
(define-fun |uart_tx_n $auto$async2sync.cc:101:execute$144| ((state |uart_tx_s|)) Bool (= ((_ extract 0 0) (|uart_tx#33| state)) #b1))
(define-fun |uart_tx#34| ((state |uart_tx_s|)) (_ BitVec 1) (bvnot (ite (|uart_tx#8| state) #b1 #b0))) ; $auto$rtlil.cc:2485:Not$235
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$236
(define-fun |uart_tx_u 0| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#34| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$236
; yosys-smt2-assert 0 _witness_.check_assert_uart_tx_v_62_76 uart_tx.v:62.77-62.124
(define-fun |uart_tx_a 0| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#25| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#33| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_62_76
; yosys-smt2-assert 1 _witness_.check_assert_uart_tx_v_61_70 uart_tx.v:61.56-61.84
(define-fun |uart_tx_a 1| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#24| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#32| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_61_70
; yosys-smt2-assert 2 _witness_.check_assert_uart_tx_v_60_66 uart_tx.v:60.50-60.80
(define-fun |uart_tx_a 2| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#24| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#31| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_60_66
; yosys-smt2-assert 3 _witness_.check_assert_uart_tx_v_59_62 uart_tx.v:59.18-59.42
(define-fun |uart_tx_a 3| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#23| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#30| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_59_62
; yosys-smt2-assert 4 _witness_.check_assert_uart_tx_v_58_59 uart_tx.v:58.56-58.79
(define-fun |uart_tx_a 4| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#23| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#29| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_58_59
; yosys-smt2-assert 5 _witness_.check_assert_uart_tx_v_57_54 uart_tx.v:57.97-57.134
(define-fun |uart_tx_a 5| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#22| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#28| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_57_54
; yosys-smt2-assert 6 _witness_.check_assert_uart_tx_v_56_47 uart_tx.v:56.47-56.77
(define-fun |uart_tx_a 6| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#21| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#27| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_56_47
; yosys-smt2-assert 7 _witness_.check_assert_uart_tx_v_38_27 uart_tx.v:38.7-38.17
(define-fun |uart_tx_a 7| ((state |uart_tx_s|)) Bool (or (= ((_ extract 0 0) (|uart_tx#20| state)) #b1) (not (= ((_ extract 0 0) (|uart_tx#26| state)) #b1)))) ; _witness_.check_assert_uart_tx_v_38_27
(define-fun |uart_tx#35| ((state |uart_tx_s|)) Bool (bvsgt (|uart_tx#11| state) #b00000000000000000000000000000001)) ; $gt$uart_tx.v:62$72_Y
(define-fun |uart_tx#36| ((state |uart_tx_s|)) Bool (bvslt (|uart_tx#10| state) #b00000000000000000000000000001010)) ; $lt$uart_tx.v:62$73_Y
(define-fun |uart_tx#37| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#35| state) false) (or  (|uart_tx#36| state) false))) ; $logic_and$uart_tx.v:62$74_Y
(define-fun |uart_tx#38| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#37| state) false) (or  (= ((_ extract 0 0) (|uart_tx#5| state)) #b1) false))) ; $logic_and$uart_tx.v:62$75_Y
(define-fun |uart_tx#39| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#38| state) #b1 #b0)) ; $assert$uart_tx.v:62$76_EN
(define-fun |uart_tx#40| ((state |uart_tx_s|)) Bool (= (|uart_tx#12| state) #b00000000000000000000000000001010)) ; $eq$uart_tx.v:61$68_Y
(define-fun |uart_tx#41| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#40| state) false) (or  (= ((_ extract 0 0) (|uart_tx#5| state)) #b1) false))) ; $logic_and$uart_tx.v:61$69_Y
(define-fun |uart_tx#42| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#41| state) #b1 #b0)) ; $assert$uart_tx.v:61$70_EN
(define-fun |uart_tx#43| ((state |uart_tx_s|)) Bool (not (or  (= ((_ extract 0 0) (|uart_tx#13| state)) #b1) (= ((_ extract 1 1) (|uart_tx#13| state)) #b1) (= ((_ extract 2 2) (|uart_tx#13| state)) #b1) (= ((_ extract 3 3) (|uart_tx#13| state)) #b1) (= ((_ extract 4 4) (|uart_tx#13| state)) #b1) (= ((_ extract 5 5) (|uart_tx#13| state)) #b1) (= ((_ extract 6 6) (|uart_tx#13| state)) #b1) (= ((_ extract 7 7) (|uart_tx#13| state)) #b1) (= ((_ extract 8 8) (|uart_tx#13| state)) #b1) (= ((_ extract 9 9) (|uart_tx#13| state)) #b1) (= ((_ extract 10 10) (|uart_tx#13| state)) #b1) (= ((_ extract 11 11) (|uart_tx#13| state)) #b1) (= ((_ extract 12 12) (|uart_tx#13| state)) #b1) (= ((_ extract 13 13) (|uart_tx#13| state)) #b1) (= ((_ extract 14 14) (|uart_tx#13| state)) #b1) (= ((_ extract 15 15) (|uart_tx#13| state)) #b1) (= ((_ extract 16 16) (|uart_tx#13| state)) #b1) (= ((_ extract 17 17) (|uart_tx#13| state)) #b1) (= ((_ extract 18 18) (|uart_tx#13| state)) #b1) (= ((_ extract 19 19) (|uart_tx#13| state)) #b1) (= ((_ extract 20 20) (|uart_tx#13| state)) #b1) (= ((_ extract 21 21) (|uart_tx#13| state)) #b1) (= ((_ extract 22 22) (|uart_tx#13| state)) #b1) (= ((_ extract 23 23) (|uart_tx#13| state)) #b1) (= ((_ extract 24 24) (|uart_tx#13| state)) #b1) (= ((_ extract 25 25) (|uart_tx#13| state)) #b1) (= ((_ extract 26 26) (|uart_tx#13| state)) #b1) (= ((_ extract 27 27) (|uart_tx#13| state)) #b1) (= ((_ extract 28 28) (|uart_tx#13| state)) #b1) (= ((_ extract 29 29) (|uart_tx#13| state)) #b1) (= ((_ extract 30 30) (|uart_tx#13| state)) #b1) (= ((_ extract 31 31) (|uart_tx#13| state)) #b1)))) ; $eq$uart_tx.v:60$64_Y
(define-fun |uart_tx#44| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#43| state) false) (or  (= ((_ extract 0 0) (|uart_tx#5| state)) #b1) false))) ; $logic_and$uart_tx.v:60$65_Y
(define-fun |uart_tx#45| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#44| state) #b1 #b0)) ; $assert$uart_tx.v:60$66_EN
(define-fun |uart_tx#46| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#3| state) #b1 #b0)) ; $assert$uart_tx.v:59$62_EN
(define-fun |uart_tx#47| ((state |uart_tx_s|)) Bool (= (|uart_tx#14| state) #b00000000000000000000000000001010)) ; $eq$uart_tx.v:58$57_Y
(define-fun |uart_tx#48| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#47| state) false) (or  (= ((_ extract 0 0) (|uart_tx#5| state)) #b1) false))) ; $logic_and$uart_tx.v:58$58_Y
(define-fun |uart_tx#49| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#48| state) #b1 #b0)) ; $assert$uart_tx.v:58$59_EN
(define-fun |uart_tx#50| ((state |uart_tx_s|)) Bool (distinct (|uart_tx#17| state) #b00000000000000000000000000000000)) ; $ne$uart_tx.v:57$49_Y
(define-fun |uart_tx#51| ((state |uart_tx_s|)) Bool (and (or  (= ((_ extract 0 0) (|uart_tx#18| state)) #b1) false) (or  (|uart_tx#50| state) false))) ; $logic_and$uart_tx.v:57$50_Y
(define-fun |uart_tx#52| ((state |uart_tx_s|)) Bool (distinct (|uart_tx#16| state) #b00000000000000000000000000001010)) ; $ne$uart_tx.v:57$51_Y
(define-fun |uart_tx#53| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#51| state) false) (or  (|uart_tx#52| state) false))) ; $logic_and$uart_tx.v:57$52_Y
(define-fun |uart_tx#54| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#53| state) false) (or  (= ((_ extract 0 0) (|uart_tx#5| state)) #b1) false))) ; $logic_and$uart_tx.v:57$53_Y
(define-fun |uart_tx#55| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#54| state) #b1 #b0)) ; $assert$uart_tx.v:57$54_EN
(define-fun |uart_tx#56| ((state |uart_tx_s|)) Bool (= (|uart_tx#19| state) #b00000000000000000000000000000001)) ; $eq$uart_tx.v:56$45_Y
(define-fun |uart_tx#57| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#56| state) false) (or  (= ((_ extract 0 0) (|uart_tx#5| state)) #b1) false))) ; $logic_and$uart_tx.v:56$46_Y
(define-fun |uart_tx#58| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#57| state) #b1 #b0)) ; $assert$uart_tx.v:56$47_EN
(define-fun |uart_tx#59| ((state |uart_tx_s|)) Bool (= (|uart_tx#0| state) #b00000000000000000000000000001010)) ; $eq$uart_tx.v:35$26_Y
(define-fun |uart_tx#60| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#59| state) #b0 #b1)) ; $procmux$104_Y
(define-fun |uart_tx#61| ((state |uart_tx_s|)) Bool (bvslt (|uart_tx#0| state) #b00000000000000000000000000001010)) ; $lt$uart_tx.v:28$19_Y
(define-fun |uart_tx#62| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#61| state) #b0 (|uart_tx#60| state))) ; $procmux$107_Y
(define-fun |uart_tx#63| ((state |uart_tx_s|)) Bool (= (|uart_tx#0| state) #b00000000000000000000000000000001)) ; $eq$uart_tx.v:33$22_Y
(define-fun |uart_tx#64| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#63| state) #b0 (|uart_tx#62| state))) ; $procmux$110_Y
(define-fun |uart_tx#65| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#3| state) #b0 (|uart_tx#64| state))) ; $assert$uart_tx.v:38$27_EN
(define-fun |uart_tx#66| ((state |uart_tx_s|)) (_ BitVec 32) (bvsub (|uart_tx#9| state) #b00000000000000000000000000000010)) ; $sub$uart_tx.v:62$77_Y
(define-fun |uart_tx#67| ((state |uart_tx_s|)) (_ BitVec 1) ((_ extract 0 0) (ite (bvsge (|uart_tx#66| state) #b00000000000000000000000000000000) (bvlshr (concat #b000000000000000000000000 (|uart_tx#1| state)) (|uart_tx#66| state)) (bvshl (concat #b000000000000000000000000 (|uart_tx#1| state)) (bvneg (|uart_tx#66| state)))))) ; $shiftx$uart_tx.v:0$78_Y
(define-fun |uart_tx#68| ((state |uart_tx_s|)) Bool (= (|uart_tx#2| state) (|uart_tx#67| state))) ; $eq$uart_tx.v:62$79_Y
(define-fun |uart_tx#69| ((state |uart_tx_s|)) (_ BitVec 32) (bvadd (|uart_tx#15| state) #b00000000000000000000000000000001)) ; $add$uart_tx.v:57$55_Y
(define-fun |uart_tx#70| ((state |uart_tx_s|)) Bool (= (|uart_tx#0| state) (|uart_tx#69| state))) ; $eq$uart_tx.v:57$56_Y
(define-fun |uart_tx#71| ((state |uart_tx_s|)) (_ BitVec 1) (bvnot (|uart_tx#2| state))) ; $eq$uart_tx.v:56$48_Y
(define-fun |uart_tx#72| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#59| state) #b1 (|uart_tx#2| state))) ; $procmux$116_Y
(define-fun |uart_tx#73| ((state |uart_tx_s|)) (_ BitVec 32) (bvsub (|uart_tx#0| state) #b00000000000000000000000000000010)) ; $sub$uart_tx.v:34$24_Y
(define-fun |uart_tx#74| ((state |uart_tx_s|)) (_ BitVec 1) ((_ extract 0 0) (ite (bvsge (|uart_tx#73| state) #b00000000000000000000000000000000) (bvlshr (concat #b000000000000000000000000 (|uart_tx#1| state)) (|uart_tx#73| state)) (bvshl (concat #b000000000000000000000000 (|uart_tx#1| state)) (bvneg (|uart_tx#73| state)))))) ; $shiftx$uart_tx.v:0$25_Y
(define-fun |uart_tx#75| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#61| state) (|uart_tx#74| state) (|uart_tx#72| state))) ; $procmux$119_Y
(define-fun |uart_tx#76| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#63| state) #b0 (|uart_tx#75| state))) ; $procmux$122_Y
(define-fun |uart_tx#77| ((state |uart_tx_s|)) (_ BitVec 1) (ite (|uart_tx#3| state) #b1 (|uart_tx#76| state))) ; $0\o_uart_tx[0:0]
(define-fun |uart_tx#78| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#6| state) false) (or  (|uart_tx#3| state) false))) ; $logic_and$uart_tx.v:14$14_Y
(define-fun |uart_tx#79| ((state |uart_tx_s|)) (_ BitVec 8) (ite (|uart_tx#78| state) (|uart_tx#7| state) (|uart_tx#1| state))) ; $0\r_data[7:0]
(define-fun |uart_tx#80| ((state |uart_tx_s|)) (_ BitVec 32) (bvadd (|uart_tx#0| state) #b00000000000000000000000000000001)) ; $add$uart_tx.v:28$20_Y
(define-fun |uart_tx#81| ((state |uart_tx_s|)) (_ BitVec 32) (ite (|uart_tx#61| state) (|uart_tx#80| state) #b00000000000000000000000000000000)) ; $procmux$98_Y
(define-fun |uart_tx#82| ((state |uart_tx_s|)) Bool (not (or  (|uart_tx#6| state) false))) ; $logic_not$uart_tx.v:27$16_Y
(define-fun |uart_tx#83| ((state |uart_tx_s|)) Bool (and (or  (|uart_tx#82| state) false) (or  (|uart_tx#3| state) false))) ; $logic_and$uart_tx.v:27$18_Y
(define-fun |uart_tx#84| ((state |uart_tx_s|)) (_ BitVec 32) (ite (|uart_tx#83| state) #b00000000000000000000000000000000 (|uart_tx#81| state))) ; $0\r_state[31:0]
(define-fun |uart_tx_a| ((state |uart_tx_s|)) Bool (and
  (|uart_tx_a 0| state)
  (|uart_tx_a 1| state)
  (|uart_tx_a 2| state)
  (|uart_tx_a 3| state)
  (|uart_tx_a 4| state)
  (|uart_tx_a 5| state)
  (|uart_tx_a 6| state)
  (|uart_tx_a 7| state)
))
(define-fun |uart_tx_u| ((state |uart_tx_s|)) Bool 
  (|uart_tx_u 0| state)
)
(define-fun |uart_tx_i| ((state |uart_tx_s|)) Bool (and
  (= (|uart_tx#0| state) #b00000000000000000000000000000000) ; r_state
  (= (|uart_tx#1| state) #b00000000) ; r_data
  (= (= ((_ extract 0 0) (|uart_tx#5| state)) #b1) false) ; is_past_valid
  (= (= ((_ extract 0 0) (|uart_tx#20| state)) #b1) true) ; $auto$async2sync.cc:110:execute$190
  (= (= ((_ extract 0 0) (|uart_tx#21| state)) #b1) true) ; $auto$async2sync.cc:110:execute$184
  (= (= ((_ extract 0 0) (|uart_tx#22| state)) #b1) true) ; $auto$async2sync.cc:110:execute$178
  (= (= ((_ extract 0 0) (|uart_tx#23| state)) #b1) true) ; $auto$async2sync.cc:110:execute$166
  (= (= ((_ extract 0 0) (|uart_tx#24| state)) #b1) true) ; $auto$async2sync.cc:110:execute$154
  (= (= ((_ extract 0 0) (|uart_tx#25| state)) #b1) true) ; $auto$async2sync.cc:110:execute$148
  (= (= ((_ extract 0 0) (|uart_tx#26| state)) #b1) false) ; $auto$async2sync.cc:101:execute$186
  (= (= ((_ extract 0 0) (|uart_tx#27| state)) #b1) false) ; $auto$async2sync.cc:101:execute$180
  (= (= ((_ extract 0 0) (|uart_tx#28| state)) #b1) false) ; $auto$async2sync.cc:101:execute$174
  (= (= ((_ extract 0 0) (|uart_tx#29| state)) #b1) false) ; $auto$async2sync.cc:101:execute$168
  (= (= ((_ extract 0 0) (|uart_tx#30| state)) #b1) false) ; $auto$async2sync.cc:101:execute$162
  (= (= ((_ extract 0 0) (|uart_tx#31| state)) #b1) false) ; $auto$async2sync.cc:101:execute$156
  (= (= ((_ extract 0 0) (|uart_tx#32| state)) #b1) false) ; $auto$async2sync.cc:101:execute$150
  (= (= ((_ extract 0 0) (|uart_tx#33| state)) #b1) false) ; $auto$async2sync.cc:101:execute$144
))
(define-fun |uart_tx_h| ((state |uart_tx_s|)) Bool true)
(define-fun |uart_tx_t| ((state |uart_tx_s|) (next_state |uart_tx_s|)) Bool (and
  (= (|uart_tx#39| state) (|uart_tx#33| next_state)) ; $auto$async2sync.cc:104:execute$146 $auto$async2sync.cc:101:execute$144
  (= (|uart_tx#42| state) (|uart_tx#32| next_state)) ; $auto$async2sync.cc:104:execute$152 $auto$async2sync.cc:101:execute$150
  (= (|uart_tx#45| state) (|uart_tx#31| next_state)) ; $auto$async2sync.cc:104:execute$158 $auto$async2sync.cc:101:execute$156
  (= (|uart_tx#46| state) (|uart_tx#30| next_state)) ; $auto$async2sync.cc:104:execute$164 $auto$async2sync.cc:101:execute$162
  (= (|uart_tx#49| state) (|uart_tx#29| next_state)) ; $auto$async2sync.cc:104:execute$170 $auto$async2sync.cc:101:execute$168
  (= (|uart_tx#55| state) (|uart_tx#28| next_state)) ; $auto$async2sync.cc:104:execute$176 $auto$async2sync.cc:101:execute$174
  (= (|uart_tx#58| state) (|uart_tx#27| next_state)) ; $auto$async2sync.cc:104:execute$182 $auto$async2sync.cc:101:execute$180
  (= (|uart_tx#65| state) (|uart_tx#26| next_state)) ; $auto$async2sync.cc:104:execute$188 $auto$async2sync.cc:101:execute$186
  (= (ite (|uart_tx#68| state) #b1 #b0) (|uart_tx#25| next_state)) ; $auto$async2sync.cc:112:execute$149 $auto$async2sync.cc:110:execute$148
  (= (|uart_tx#2| state) (|uart_tx#24| next_state)) ; $auto$async2sync.cc:112:execute$155 $auto$async2sync.cc:110:execute$154
  (= (ite (|uart_tx#3| state) #b1 #b0) (|uart_tx#23| next_state)) ; $auto$async2sync.cc:112:execute$167 $auto$async2sync.cc:110:execute$166
  (= (ite (|uart_tx#70| state) #b1 #b0) (|uart_tx#22| next_state)) ; $auto$async2sync.cc:112:execute$179 $auto$async2sync.cc:110:execute$178
  (= (|uart_tx#71| state) (|uart_tx#21| next_state)) ; $auto$async2sync.cc:112:execute$185 $auto$async2sync.cc:110:execute$184
  (= #b0 (|uart_tx#20| next_state)) ; $auto$async2sync.cc:112:execute$191 $auto$async2sync.cc:110:execute$190
  (= (|uart_tx#0| state) (|uart_tx#19| next_state)) ; $procdff$129 \_witness_.anyinit_procdff_129
  (= (ite (|uart_tx#6| state) #b1 #b0) (|uart_tx#18| next_state)) ; $procdff$130 \_witness_.anyinit_procdff_130
  (= (|uart_tx#0| state) (|uart_tx#17| next_state)) ; $procdff$131 \_witness_.anyinit_procdff_131
  (= (|uart_tx#0| state) (|uart_tx#16| next_state)) ; $procdff$132 \_witness_.anyinit_procdff_132
  (= (|uart_tx#0| state) (|uart_tx#15| next_state)) ; $procdff$133 \_witness_.anyinit_procdff_133
  (= (|uart_tx#0| state) (|uart_tx#14| next_state)) ; $procdff$134 \_witness_.anyinit_procdff_134
  (= (|uart_tx#0| state) (|uart_tx#13| next_state)) ; $procdff$135 \_witness_.anyinit_procdff_135
  (= (|uart_tx#0| state) (|uart_tx#12| next_state)) ; $procdff$136 \_witness_.anyinit_procdff_136
  (= (|uart_tx#0| state) (|uart_tx#11| next_state)) ; $procdff$137 \_witness_.anyinit_procdff_137
  (= (|uart_tx#0| state) (|uart_tx#10| next_state)) ; $procdff$138 \_witness_.anyinit_procdff_138
  (= (|uart_tx#0| state) (|uart_tx#9| next_state)) ; $procdff$139 \_witness_.anyinit_procdff_139
  (= #b1 (|uart_tx#5| next_state)) ; $procdff$140 \is_past_valid
  (= (|uart_tx#77| state) (|uart_tx#2| next_state)) ; $procdff$141 \o_uart_tx
  (= (|uart_tx#79| state) (|uart_tx#1| next_state)) ; $procdff$143 \r_data
  (= (|uart_tx#84| state) (|uart_tx#0| next_state)) ; $procdff$142 \r_state
)) ; end of module uart_tx
; yosys-smt2-topmod uart_tx
; end of yosys output
